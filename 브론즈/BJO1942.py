# 디지털시계는 일반적으로 시각을 “hh:mm:ss”의 형태로 표현한다. hh는 00 이상 23 이하의 값을, mm과 ss는 00 이상 59 이하의 값을 가질 수 있다. 이러한 형태의 시각에서 콜론(“:”)을 제거하면 “hhmmss”라는 정수를 얻을 수 있는데, 이러한 정수를 시계 정수라고 한다. 예를 들어, 오후 5시 5분 13초, 즉 17:05:13의 시계 정수는 170513이고, 오전 0시 7분 37초, 즉 00:07:37의 시계 정수는 737이다.

# 이 문제에서 시간이란 시각의 구간을 나타낸다. 예를 들어 [00:59:58, 01:01:24]와 같이 시작하는 시각과 끝나는 시각으로 이루어진 구간을 우리는 시간이라고 부른다. (이러한 구간에는 시작하는 시간과 끝나는 시간도 포함된다)

# 이렇게 시간이 구간으로 주어지면, 그 구간에 포함되는 시계 정수들을 나열할 수 있다. 예를 들어 [00:59:58, 01:01:24]에 포함되는 시계 정수는 5958, 5959, 다음으로 10000 이상 10059 이하, 마지막으로 10100 이상 10124 이하로 총 87개가 된다. 우리는 이처럼 특정한 시간에 포함되는 시계 정수들 중, 3의 배수인 것이 몇 개나 있는지를 알고 싶다.

# 시간은 자정을 포함할 수도 있다. 즉 [23:59:03, 00:01:24]처럼 시작하는 시각의 시계 정수(235903)가 끝나는 시각의 시계 정수(124)보다 클 수도 있다. 물론 이 경우 이 구간에 포함되는 시계 정수는 235903 이상 235959 이하, 0 이상 59 이하, 100 이상 124 이하가 된다. 모든 구간이 포함하는 시간은 만 하루, 즉 24시간보다는 항상 작다고 가정해도 좋다.

# 시간이 시작하는 시각과 끝나는 시각으로 주어졌을 때, 이 구간에 포함되는 시계 정수들 중, 3의 배수인 것의 개수를 구하는 프로그램을 작성하시오.


for i in range(3):
    s1,s2 = map(str,input().split())
    s1 = list(map(int,s1.split(':')))
    s2 = list(map(int,s2.split(':')))
    ans = 0
    while True:
        if s1[0] == s2[0] and s1[1] == s2[1] and s1[2] == s2[2]:
            if (s1[0]+s1[1]+s1[2])%3 == 0:
                ans += 1
            break
        else:
            if s1[0] < 10:
                t1 = '0'+str(s1[0])
            else:
                t1 = str(s1[0])
            if s1[1] < 10:
                t2 = '0'+str(s1[1])
            else:
                t2 = str(s1[1])
            if s1[2] < 10:
                t3 = '0'+str(s1[2])
            else:
                t3 = str(s1[2])
            t1 = int(t1+t2+t3)
            if t1%3 == 0:
                ans += 1
            s1[2] += 1
            if s1[2] >= 60:
                s1[2] -= 60
                s1[1] += 1
            if s1[1] >= 60:
                s1[1] -= 60
                s1[0] += 1
            if s1[0] >= 24:
                s1[0] -= 24
    print(ans)